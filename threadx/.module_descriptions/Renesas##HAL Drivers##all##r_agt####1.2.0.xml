<?xml version="1.0" ?>
<synergyModuleDescription>
    <config id="config.driver.agt" path="ssp_cfg/driver/r_agt_cfg.h" version="0">
        <property default="config.driver.agt.param_checking_enable.bsp" display="Parameter Checking" id="config.driver.agt.param_checking_enable">
            <option display="Default (BSP)" id="config.driver.agt.param_checking_enable.bsp" value="(BSP_CFG_PARAM_CHECKING_ENABLE)"/>
            <option display="Enabled" id="config.driver.agt.param_checking_enable.enabled" value="(1)"/>
            <option display="Disabled" id="config.driver.agt.param_checking_enable.disabled" value="(0)"/>
        </property>
        <content>#define AGT_CFG_PARAM_CHECKING_ENABLE ${config.driver.agt.param_checking_enable}
</content>
    </config>
    <module config="config.driver.agt" display="Driver|Timers|${module.driver.timer.name} Timer Driver on r_agt" id="module.driver.timer_on_agt" version="1">
        <constraint display="Requires AGT${module.driver.timer.channel} Underflow Interrupt (INT) enabled">
            "${module.driver.timer.p_callback}" === "NULL" || "${module.driver.timer.irq_ipl}" != "board.icu.common.irq.disabled"
        </constraint> 
        <constraint display="Unique name required for each instance">
            "${interface.driver.timer.${module.driver.timer.name}}" === "1"
        </constraint>
        <provides interface="interface.driver.timer" />
        <provides interface="interface.driver.timer_on_agt" />
        <provides interface="interface.driver.timer.${module.driver.timer.name}" />
        <property default="g_timer${_instance}" display="Name" id="module.driver.timer.name">
            <constraint display="Name must be a valid C symbol">testSymbol("${module.driver.timer.name}")</constraint>
        </property>
        <property default="0" display="Channel" id="module.driver.timer.channel">
            <constraint display="Value must be a non-negative integer">testInteger("${module.driver.timer.channel}")  &amp;&amp; ("${module.driver.timer.channel}" &gt;= 0)</constraint>
        </property>        
        <property default="module.driver.timer.mode.mode_periodic" display="Mode" id="module.driver.timer.mode">
            <option display="Periodic" id="module.driver.timer.mode.mode_periodic" value="TIMER_MODE_PERIODIC"/>
            <option display="One Shot" id="module.driver.timer.mode.mode_one_shot" value="TIMER_MODE_ONE_SHOT"/>
        </property>
        <property default="10" display="Period Value" id="module.driver.timer.period">
            <constraint display="Value must be a non-negative integer">testInteger("${module.driver.timer.period}")  &amp;&amp; ("${module.driver.timer.period}" &gt;= 0)</constraint>
        </property>                
        <property default="module.driver.timer.unit.unit_period_usec" display="Period Unit" id="module.driver.timer.unit">
            <option display="Raw Counts" id="module.driver.timer.unit.unit_period_raw_counts" value="TIMER_UNIT_PERIOD_RAW_COUNTS"/>
            <option display="Nanoseconds" id="module.driver.timer.unit.unit_period_nsec" value="TIMER_UNIT_PERIOD_NSEC"/>
            <option display="Microseconds" id="module.driver.timer.unit.unit_period_usec" value="TIMER_UNIT_PERIOD_USEC"/>
            <option display="Milliseconds" id="module.driver.timer.unit.unit_period_msec" value="TIMER_UNIT_PERIOD_MSEC"/>
            <option display="Seconds" id="module.driver.timer.unit.unit_period_sec" value="TIMER_UNIT_PERIOD_SEC"/>
            <option display="Hertz" id="module.driver.timer.unit.unit_frequency_hz" value="TIMER_UNIT_FREQUENCY_HZ"/>
            <option display="Kilohertz" id="module.driver.timer.unit.unit_frequency_khz" value="TIMER_UNIT_FREQUENCY_KHZ"/>
        </property>
        <property default="module.driver.timer.autostart.true" display="Auto Start" id="module.driver.timer.autostart">
            <option display="True" id="module.driver.timer.autostart.true" value="true"/>
            <option display="False" id="module.driver.timer.autostart.false" value="false"/>
        </property>                
        <property default="module.driver.timer.count_source.clock_pclkb" display="Count Source" id="module.driver.timer.count_source">
            <option display="PCLKB" id="module.driver.timer.count_source.clock_pclkb" value="AGT_CLOCK_PCLKB"/>
            <option display="PCLKB/8" id="module.driver.timer.count_source.clock_pclkb_div_8" value="AGT_CLOCK_PCLKB_DIV_8"/>
            <option display="PCLKB/2" id="module.driver.timer.count_source.clock_pclkb_div_2" value="AGT_CLOCK_PCLKB_DIV_2"/>
            <option display="LOCO" id="module.driver.timer.count_source.clock_loco" value="AGT_CLOCK_LOCO"/>
            <option display="AGT0 Underflow" id="module.driver.timer.count_source.clock_agt0_underflow" value="AGT_CLOCK_AGT0_UNDERFLOW"/>
            <option display="AGT0 fSUB" id="module.driver.timer.count_source.clock_fsub" value="AGT_CLOCK_FSUB"/>
        </property>
        <property default="module.driver.timer.agto_output_enabled.false" display="AGTO Output Enabled" id="module.driver.timer.agto_output_enabled">
            <option display="True" id="module.driver.timer.agto_output_enabled.true" value="true"/>
            <option display="False" id="module.driver.timer.agto_output_enabled.false" value="false"/>
        </property>
        <property default="module.driver.timer.agtio_output_enabled.false" display="AGTIO Output Enabled" id="module.driver.timer.agtio_output_enabled">
            <option display="True" id="module.driver.timer.agtio_output_enabled.true" value="true"/>
            <option display="False" id="module.driver.timer.agtio_output_enabled.false" value="false"/>
        </property>
        <property default="module.driver.timer.output_inverted.false" display="Output Inverted" id="module.driver.timer.output_inverted">
            <option display="True" id="module.driver.timer.output_inverted.true" value="true"/>
            <option display="False" id="module.driver.timer.output_inverted.false" value="false"/>
        </property>
        <property default="NULL" display="Callback" id="module.driver.timer.p_callback">
            <constraint display="Name must be a valid C symbol">testSymbol("${module.driver.timer.p_callback}")</constraint>
        </property>
        <property default="board.icu.common.irq.disabled" display="Interrupt Priority" id="module.driver.timer.irq_ipl">
            <option display="Priority 0 (highest)" id="board.icu.common.irq.priority0" value="(0)" />
            <option display="Priority 1" id="board.icu.common.irq.priority1" value="(1)" />
            <option display="Priority 2" id="board.icu.common.irq.priority2" value="(2)" />
            <option display="Priority 3 (CM4: valid, CM0+: lowest - not valid if using ThreadX)" id="board.icu.common.irq.priority3" value="(3)" />
            <option display="Priority 4 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority4" value="(4)" />
            <option display="Priority 5 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority5" value="(5)" />
            <option display="Priority 6 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority6" value="(6)" />
            <option display="Priority 7 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority7" value="(7)" />
            <option display="Priority 8 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority8" value="(8)" />
            <option display="Priority 9 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority9" value="(9)" />
            <option display="Priority 10 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority10" value="(10)" />
            <option display="Priority 11 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority11" value="(11)" />
            <option display="Priority 12 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority12" value="(12)" />
            <option display="Priority 13 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority13" value="(13)" />
            <option display="Priority 14 (CM4: valid, CM0+: invalid)" id="board.icu.common.irq.priority14" value="(14)" />
            <option display="Priority 15 (CM4: lowest - not valid if using ThreadX, CM0+: invalid)" id="board.icu.common.irq.priority15" value="(15)" />
            <option display="Disabled" id="board.icu.common.irq.disabled" value="(BSP_IRQ_DISABLED)" />
        </property>
        <header>
            /** AGT Timer Instance */
            extern const timer_instance_t ${module.driver.timer.name};            
        </header>
        <includes>#include &quot;r_agt.h&quot;
#include &quot;r_timer_api.h&quot;</includes>
        <declarations>
#if ${module.driver.timer.irq_ipl} != BSP_IRQ_DISABLED
#if !defined(SSP_SUPPRESS_ISR_${module.driver.timer.name}) &amp;&amp; !defined(SSP_SUPPRESS_ISR_AGT${module.driver.timer.channel})
SSP_VECTOR_DEFINE_CHAN(agt_int_isr, AGT, INT, ${module.driver.timer.channel});
#endif
#endif
#ifndef ${module.driver.timer.p_callback}
void ${module.driver.timer.p_callback}(timer_callback_args_t * p_args);
#endif
static agt_instance_ctrl_t ${module.driver.timer.name}_ctrl;
static const timer_on_agt_cfg_t ${module.driver.timer.name}_extend =
{
    .count_source        = ${module.driver.timer.count_source},
    .agto_output_enabled = ${module.driver.timer.agto_output_enabled},
    .agtio_output_enabled = ${module.driver.timer.agtio_output_enabled},
    .output_inverted     = ${module.driver.timer.output_inverted},
};
static const timer_cfg_t ${module.driver.timer.name}_cfg =
{
    .mode                = ${module.driver.timer.mode},
    .period              = ${module.driver.timer.period},
    .unit                = ${module.driver.timer.unit},
    .channel             = ${module.driver.timer.channel},
    .autostart           = ${module.driver.timer.autostart},
    .p_callback          = ${module.driver.timer.p_callback},
    .p_context           = &amp;${module.driver.timer.name},
    .p_extend            = &amp;${module.driver.timer.name}_extend,
    .irq_ipl             = ${module.driver.timer.irq_ipl},
};
/* Instance structure to use this module. */
const timer_instance_t ${module.driver.timer.name} = 
{
    .p_ctrl        = &amp;${module.driver.timer.name}_ctrl,
    .p_cfg         = &amp;${module.driver.timer.name}_cfg,
    .p_api         = &amp;g_timer_on_agt
};
</declarations>
    </module>
</synergyModuleDescription>
